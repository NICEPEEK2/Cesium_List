import { store } from "../main.js";
import { embed } from "../util.js";
import { score } from "../score.js";
import { fetchEditors, fetchList } from "../content.js";

import Spinner from "../components/Spinner.js";
import LevelAuthors from "../components/List/LevelAuthors.js";

const roleIconMap = {
    owner: "crown",
    admin: "user-gear",
    helper: "user-shield",
    dev: "code",
    trial: "user-lock",
};

export default {
    components: { Spinner, LevelAuthors },
    template: `
        <main v-if="loading">
            <Spinner></Spinner>
        </main>
        <main v-else class="page-List">
            <div class="List-container">
                <table class="List" v-if="List">
                    <tr v-for="([level, err], i) in List">
                        <td class="rank">
                            <p v-if="i + 1 <= 150" class="type-label-lg">#{{ i + 1 }}</p>
                            <p v-else class="type-label-lg">Legacy</p>
                        </td>
                        <td class="level" :class="{ 'active': selected == i, 'error': !level }">
                            <button @click="selected = i">
                                <span class="type-label-lg">{{ level?.name || \`Error (\${err}.json)\` }}</span>
                            </button>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="level-container">
                <div class="level" v-if="level">
                    <h1>{{ level.name }}</h1>
                    <LevelAuthors :author="level.author" :–°–æ–∑–¥–∞—Ç–µ–ª–∏="level.–°–æ–∑–¥–∞—Ç–µ–ª–∏" :–í–µ—Ä–∏—Ñ–µ—Ä="level.–í–µ—Ä–∏—Ñ–µ—Ä"></LevelAuthors>
                    <div v-if="level.–®–æ—É–∫–µ–π—Å" class="tabs">
                        <button class="tab type-label-lg" :class="{selected: !toggled–®–æ—É–∫–µ–π—Å}" @click="toggled–®–æ—É–∫–µ–π—Å = false">
                            <span class="type-label-lg">–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è</span>
                        </button>
                        <button class="tab" :class="{selected: toggled–®–æ—É–∫–µ–π—Å}" @click="toggled–®–æ—É–∫–µ–π—Å = true">
                            <span class="type-label-lg">–®–æ—É–∫–µ–π—Å</span>
                        </button>
                    </div>
                    <iframe class="vIdeo" Id="vIdeoframe" :src="vIdeo" frameborder="0"></iframe>
                    <ul class="stats">
                        <li>
                            <div class="type-title-sm">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ</div>
                            <p>{{ score(selected + 1, 100, level.percentToQualify) }}</p>
                        </li>
                        <li>
                            <div class="type-title-sm">Id</div>
                            <p>{{ level.Id }}</p>
                        </li>
                        <li>
                            <div class="type-title-sm">–ü–∞—Ä–æ–ª—å</div>
                            <p>{{ level.–ü–∞—Ä–æ–ª—å || 'Free to Copy' }}</p>
                        </li>
                    </ul>
                    <h2>–†–µ–∫–æ—Ä–¥—ã</h2>
                    <p v-if="selected + 1 <= 75"><strong>{{ level.percentToQualify }}%</strong> –∏–ª–∏ –ª—É—á—à–µ </p>
                    <p v-else-if="selected +1 <= 150"><strong>100%</strong> –∏–ª–∏ –ª—É—á—à–µ </p>
                    <p v-else>This level does not accept new –†–µ–∫–æ—Ä–¥—ã.</p>
                    <table class="–†–µ–∫–æ—Ä–¥—ã">
                        <tr v-for="record in level.–†–µ–∫–æ—Ä–¥—ã" class="record">
                            <td class="percent">
                                <p>{{ record.percent }}%</p>
                            </td>
                            <td class="user">
                                <a :href="record.link" target="_blank" class="type-label-lg">{{ record.user }}</a>
                            </td>
                            <td class="mobile">
                                <img v-if="record.mobile" :src="\`/assets/phone-landscape\${store.dark ? '-dark' : ''}.svg\`" alt="Mobile">
                            </td>
                            <td class="hz">
                                <p>{{ record.hz }}Hz</p>
                            </td>
                        </tr>
                    </table>
                </div>
                <div v-else class="level" style="height: 100%; justify-content: center; align-items: center;">
                    <p>üé∂–ë–∞–Ω–∫–∞–π –≥–æ–≤–æ—Ä–∏—Ç —á—Ç–æ —Å–∞–π—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Çüé∂</p>
                </div>
            </div>
            <div class="meta-container">
                <div class="meta">
                    <div class="errors" v-show="errors.length > 0">
                        <p class="error" v-for="error of errors">{{ error }}</p>
                    </div>
                    <div class="og">
                        <p class="type-label-md">Original List by <a href="https://me.redlimerl.com/" target="_blank">RedLime</a></p>
                    </div>
                    <template v-if="editors">
                        <h3>–†–µ–¥–∞–∫—Ç–æ—Ä—ã List–∞</h3>
                        <ol class="editors">
                            <li v-for="editor in editors">
                                <img :src="\`image/\${roleIconMap[editor.role]}\${store.dark ? '-dark' : ''}.svg\`" :alt="editor.role">
                                <a v-if="editor.link" class="type-label-lg link" target="_blank" :href="editor.link">{{ editor.name }}</a>
                                <p v-else>{{ editor.name }}</p>
                            </li>
                        </ol>
                    </template>
                    <h3>–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏</h3>
                    <p>
                       –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ß–∏—Ç—ã, megahack –∏ —Ç–¥ –º–æ–∂–Ω–æ, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å —Ç–æ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω Cheat –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞ —Ç–∞–∫–∂–µ –º–æ–¥ –º–µ–Ω—é –≤—ã –¥–æ–ª–∂—ã –ø–æ–∫–∞–∑–∞—Ç—å –≤ –∫–æ–Ω—Ü–µ –≤–∏–¥–µ–æ —Å –≤–µ—Ä–∏—Ñ–æ–º!
                    </p>
                    <p>
                       –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –≤—Å—Ç–∞–≤–∏–ª–∏ –≤ List –≤–∞–º –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —ç—Ç–æ –∑–∞–ø–∏—Å–∞—Ç—å —ç—Ç–æ –Ω–∞ –≤–∏–¥–µ–æ –∞ —Ç–∞–∫–∂–µ —É –≤–∞—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –Ω–µ–≥–æ —Ä–∞—É —Ñ—É—Ç–∞–∂ (–°—ã—Ä–æ–π —Ñ—É—Ç–∞–∂ *—Å—Å—ã–ª–∫–∏ –Ω–∞ —é—Ç—É–± –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º*) —Ç–æ–µ—Å—Ç—å —É—Å–ª–æ–≤–Ω–æ –ø–æ–ª–Ω–∞—è –∑–∞–ø–∏—Å—å —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–æ –¥–æ —Å–∞–º–æ–≥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è. –ê —Ç–∞–∫–∂–µ –∑–∞–ø–∏—Å—å –Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–µ–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞—Ö!
                    </p>
                    <p>
                       –ß—Ç–æ–±—ã –≤–∞—à —Ä–µ–∫–æ—Ä–¥ –ø–æ–ø–∞–ª –≤ List –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –Ω–∞ –≤–∞—à–µ–π –∑–∞–ø–∏—Å–∏ –±—ã–ª–∏ —Å–ª—ã—à–Ω—ã –∫–ª–∏–∫–∏ –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ —á—Ç–æ–±—ã –±—ã–ª–æ –±–æ–ª—å—à–µ –¥–æ–≤–µ—Ä–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å —Å hand cam –ø—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è —á—Ç–æ–±—ã —É –≤–∞—Å –±—ã–ª–æ –∫–∞–º–µ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º—ã—à–∫—É –∏–ª–∏ –Ω–∞ —Ç–æ –Ω–∞ —á—ë–º –≤—ã –∏–≥—Ä–∞–π—Ç–µ.
                    </p>
                    <p>
                        –í–∞—à–µ –≤–∏–¥–µ–æ –¥–æ–ª—å–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω–æ–µ –µ—Å–ª–∏ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –Ω–∞ –ø–ª–æ—â–∞–¥–∫—É Youtube.
                    </p>
                    <p>
                        –ù–∞ –∑–∞–ø–∏—Å–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–∫–∞–∑–∞–Ω—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫.
                    </p>
                    <p>
                        –ï—Å–ª–∏ –º—ã –∑–∞–º–µ—Ç–∏–º —á—Ç–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –≤—ã –ø—Ä–æ—à–ª–∏ –Ω–µ—á–µ—Å—Ç–Ω–æ –∏ –≤—ã—Å—Ç–∞–≤–ª—è–π—Ç–µ –∑–∞ —á–µ—Å—Ç–Ω–æ —Ç–æ –º—ã –∏–º–µ–µ–º –ø–æ–ª–Ω–æ–µ –ø—Ä–∞–≤–æ –≤–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–∑ List–∞ –Ω–∞ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Å—Ä–æ–∫!
                    </p>
                    <p>
                        –£—Ä–æ–≤–Ω–∏ –Ω–∞—á–∏–Ω–∞—é —Å–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ Insane Demon –º–æ–≥—É—Ç –≤—Å—Ç–∞–≤–∏—Ç—Å—è –≤ –¥–µ–º–æ–Ω List.
                    </p>
                    <p>
                        –ó–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–∞—é—Ç—Å—è –±–∞–ª–ª—ã —á–µ–º –ª–µ–≥—á–µ —É—Ä–æ–≤–µ–Ω—å —Ç–µ–º –º–µ–Ω—å—à–µ –¥–∞—ë—Ç—å—Å—è –±–∞–ª–ª–æ–≤.
                    </p>
                    <p>
                        –í—Å–µ–≥–æ –º–µ—Å—Ç –≤ —Ç–æ–ø–µ 100 –¥–∞–ª—å—à–µ —É—Ä–æ–≤–Ω–∏ –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–æ–∂–Ω—ã–µ –Ω–æ —É–∂–µ –Ω–µ –≤–ª–µ–∑–∞—é—Ç –≤ List –ø–æ–ø–∞–¥–∞—é—Ç –≤ beyond List.
                    </p>
                    <p>
                        –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ—Ö–æ–¥—ã –∏ —Å–≤–∞–≥ —Ä–æ—É—Ç—ã –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è! –¢–∞–∫–∏–µ –∑–∞—è–≤–∫–∏ –±—É–¥—É—Ç –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—Å—è!
                    </p>
                    <p>
                       –ù–∞ —Å–∞–π—Ç–µ –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –≤ –≤–∏–¥–µ –ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –≤–∏–¥–µ–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–µ—Ç—É –ª–∏–±–æ —É—Ç–µ—Ä—è–Ω–æ –µ—Å–ª–∏ –≤ –≤–∏–¥–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —é—Ç—É–± —Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –≤–∏–¥–µ–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ —é—Ç—É–±–µ.
                    <p> 
                </div>
            </div>
        </main>
    `,
    data: () => ({
        List: [],
        editors: [],
        loading: true,
        selected: 0,
        errors: [],
        roleIconMap,
        store,
        toggled–®–æ—É–∫–µ–π—Å: false,
    }),
    computed: {
        level() {
            if (!this.List || this.List.length <= this.selected) {
              return null;
            }
            const selectedItem = this.List[this.selected];
            return selectedItem ? selectedItem[0] : null;
          },
        vIdeo() {
            if (!this.level.–®–æ—É–∫–µ–π—Å) {
                return embed(this.level.–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è);
            }

            return embed(
                this.toggled–®–æ—É–∫–µ–π—Å
                    ? this.level.–®–æ—É–∫–µ–π—Å
                    : this.level.–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
            );
        },
    },
    async mounted() {
        // HIde loading spinner
        this.List = await fetchList();
        this.editors = await fetchEditors();

        // Error handling
        if (!this.List) {
            this.errors = [
                "Failed to load List. Retry in a few minutes or notify List staff.",
            ];
        } else {
            this.errors.push(
                ...this.List
                    .filter(([_, err]) => err)
                    .map(([_, err]) => {
                        return `Failed to load level. (${err}.json)`;
                    })
            );
            if (!this.editors) {
                this.errors.push("Failed to load List editors.");
            }
        }

        this.loading = false;
    },
    methods: {
        embed,
        score,
    },
};
